{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/editors/editors.component.html","webpack:///./src/app/components/editors/editors.component.ts","webpack:///./src/app/components/folders/folders.component.html","webpack:///./src/app/components/folders/folders.component.ts","webpack:///./src/app/components/notes/notes.component.html","webpack:///./src/app/components/notes/notes.component.ts","webpack:///./src/app/services/all-setup.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<toaster-container [toasterconfig]=\\\"config1\\\"></toaster-container>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <header [ngStyle]=\\\"{'padding-left':displayFolderFlag ? '135px' : '10px' }\\\">\\n      <span class=\\\"actionIcon\\\">\\n        <i class=\\\"fa fa-columns\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggle()\\\" [title]= \\\"displayFolderFlag ? 'Hide folders' : 'Show folders'\\\"></i>\\n      </span>\\n      <span class=\\\"actionIcon\\\">\\n        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\" title=\\\"Delete\\\" (click)=\\\"deleteNote()\\\"></i>\\n      </span>\\n      <span class=\\\"actionIcon\\\">\\n        <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\" title=\\\"Create a note\\\" (click)=\\\"createNote()\\\"></i>\\n      </span>\\n    </header>\\n  </div>\\n  <div class=\\\"row body_cont\\\">\\n      <div class=\\\"col-sm-1 paddZero\\\" *ngIf= \\\"displayFolderFlag\\\">\\n        <app-folders [data] = \\\"folderList\\\" (activeFolder) = \\\"selectedFolder($event)\\\"></app-folders>\\n        <span class=\\\"actionFolder\\\" (click)=\\\"createFolder()\\\" title= \\\"Create a folder\\\" >\\n          <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i> New Folder\\n        </span>\\n      </div>\\n      <div class=\\\"col-sm-4 paddZeroNotes\\\">\\n        <app-notes [data]= \\\"notesList\\\" (activeNote) = \\\"selectedNote($event)\\\"></app-notes>\\n      </div>\\n      <div [ngClass] = \\\"displayFolderFlag ? 'col-sm-7' : 'col-sm-8'\\\">\\n       \\n       <!-- <div> -->\\n        <app-editors [data] = \\\"activatedNote\\\" (updatedNotesList) = \\\"getUpdatedNotes($event)\\\"></app-editors>\\n       <!-- </div> -->\\n      </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport {AllSetupService} from './services/all-setup.service';\nimport { Toast, ToasterService, ToasterConfig } from 'angular2-toaster';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  // styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'notesApp';\n  folderList: any;\n  notesList : any;\n  displayFolderFlag = true;\n  newNoteFlag = false;\n  newNote : any;\n  folder_id;\n  notesLength = 0;\n  notesData;\n  private toasterService: ToasterService;\n  public config1: ToasterConfig = new ToasterConfig({\n    positionClass: 'toast-top-right'\n  });\n  constructor(private service : AllSetupService, toasterService: ToasterService){\n    this.toasterService = toasterService;\n    if(this.folder_id === undefined){\n      this.folder_id = 1;\n    }\n\n  }\n  ngOnInit(){\n    this.getAllFolders();\n  }\n  getAllFolders(){\n    this.service.getFolderService().subscribe(data =>{\n      this.folderList = data;\n      // console.log(\"folder data:\", this.folderList);\n      this.getNotes(this.folderList[0].id);\n    },\n    error =>{\n      const toast: Toast = {\n        type: 'error',\n        body: error,\n        showCloseButton: true\n      };\n      this.toasterService.pop(toast);\n    });\n  }\n  toggle(){\n    if(this.displayFolderFlag){\n      this.displayFolderFlag = false;\n    }else{\n      this.displayFolderFlag = true;\n    }\n  }\n  createFolder(){\n    let newFolder = prompt(\"Please enter folder name\", \"\");\n    const obj = {};\n    if(newFolder === null || newFolder == \"\") {\n    }else{\n      obj['id'] = this.folderList.length+1;\n      obj['folderName'] = newFolder;\n      obj['createdDate'] = new Date();\n      this.service.addFolderService(obj).subscribe(data =>{\n        if(data){\n          let toast: Toast = {\n            type: 'success',\n            body: 'Folder added successfully.',\n            showCloseButton: true\n          };\n          this.toasterService.pop(toast);\n          this.getAllFolders();\n        }\n      },\n      error =>{\n        const toast: Toast = {\n          type: 'error',\n          body: error,\n          showCloseButton: true\n        };\n        this.toasterService.pop(toast);\n      });\n    }\n  }\n\n  selectedFolder(evt){\n    this.activatedNote = undefined;\n    // console.log(\"selected folder in app:\", evt);\n    this.folder_id = evt.id;\n    this.getNotes(evt.id);\n  }\n  getNotes(id){\n    this.service.getNotesService(id).subscribe(data =>{\n      if(data){\n        this.notesList = data;\n        // console.log(\"notes list:\", data);\n      }\n    },\n    error =>{\n      const toast: Toast = {\n        type: 'error',\n        body: error,\n        showCloseButton: true\n      };\n      this.toasterService.pop(toast);\n    });\n  }\n  activatedNote : any;\n  selectedNote(item){\n    this.activatedNote = item\n  }\n  createNote(){\n    this.activatedNote = undefined;\n    this.service.getAllNotesService().subscribe(res =>{\n      if(res){\n        this.notesData = res;\n        let id = Math.max.apply(Math, this.notesData.map(function(o) { return o.y; }))\n        let body = {\n          \"id\" : id+1,\n          \"folderId\" : this.folder_id,\n          \"title\" : \"New note\",\n          \"subTitle\" : \"No addition text\",\n          \"content\" : \"\",\n          \"modifiedDateTime\" : new Date()\n        }\n        this.service.addNoteService(body).subscribe(data =>{\n          if(data){\n            this.notesLength = body.id;\n            this.getNotes(this.folder_id);\n            let toast: Toast = {\n              type: 'success',\n              body: 'Note created successfully.',\n              showCloseButton: true\n            };\n            this.toasterService.pop(toast);\n          }\n        },\n        error =>{\n          const toast: Toast = {\n            type: 'error',\n            body: error,\n            showCloseButton: true\n          };\n          this.toasterService.pop(toast);\n        });\n        // this.notesLength = notesData.length;\n      }\n    },\n    error =>{\n      const toast: Toast = {\n        type: 'error',\n        body: error,\n        showCloseButton: true\n      };\n      this.toasterService.pop(toast);\n    });\n\n\n  }\n  getUpdatedNotes(evt){\n    this.notesList = evt;\n    // console.log(\"updated notes list:\", this.notesList);\n  }\n  // formatDate(date) {\n  //   let day = date.getDate();\n  //   let month = date.getMonth()+1;\n  //   let year = date.getFullYear();\n  //   let time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n\n  //   return day + '/' +  month + '/' + year + ' ' + time;\n  // }\n\n  deleteNote(){\n    // console.log(\"active note:\", this.activatedNote);\n    if(this.activatedNote){\n      this.service.deleteNoteService(this.activatedNote.id).subscribe(data =>{\n        if(data){\n          // if(this.activatedNote.id === this.notesLength){\n          //   this.notesLength = this.notesLength - 1;\n          // }\n          this.activatedNote = undefined;\n          this.getNotes(this.folder_id);\n          let toast: Toast = {\n            type: 'success',\n            body: 'Note deleted successfully.',\n            showCloseButton: true\n          };\n          this.toasterService.pop(toast);\n        }\n      },\n      error =>{\n        const toast: Toast = {\n          type: 'error',\n          body: error,\n          showCloseButton: true\n        };\n        this.toasterService.pop(toast);\n      });\n    }else{\n      let toast: Toast = {\n        type: 'error',\n        body: 'Please select note.',\n        showCloseButton: true\n      };\n      this.toasterService.pop(toast);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AllSetupService} from './services/all-setup.service';\nimport { FoldersComponent } from './components/folders/folders.component';\nimport { NotesComponent } from './components/notes/notes.component';\nimport { EditorsComponent } from './components/editors/editors.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FoldersComponent,\n    NotesComponent,\n    EditorsComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule, \n    ReactiveFormsModule,\n    ToasterModule\n  ],\n  providers: [AllSetupService, ToasterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"editor_cont\\\" *ngIf=\\\"editorData\\\">\\n  <p class=\\\"timeTitle\\\">{{editorData.modifiedDateTime | date: 'dd/MM/yyyy HH:SS'}}</p>\\n  <textarea name=\\\"\\\" id=\\\"editorContent\\\" [(ngModel)] = \\\"editorContent\\\" (ngModelChange) = \\\"contentChanges(editorContent)\\\"></textarea>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {AllSetupService} from '../../services/all-setup.service';\nimport { Toast, ToasterService, ToasterConfig } from 'angular2-toaster';\n\n@Component({\n  selector: 'app-editors',\n  templateUrl: './editors.component.html',\n  // styleUrls: ['./editors.component.scss']\n})\nexport class EditorsComponent implements OnInit {\n  @Input() data: any;\n  @Output() updatedNotesList = new EventEmitter<any>();\n  editorData : any;\n  editorContent : string;\n  private toasterService: ToasterService;\n  public config1: ToasterConfig = new ToasterConfig({\n    positionClass: 'toast-top-right'\n  });\n  constructor(private service : AllSetupService ,toasterService: ToasterService) {\n    this.toasterService = toasterService;\n  }\n\n  ngOnInit() {\n\n  }\n  ngOnChanges(){\n    this.editorData = this.data;\n    // console.log(\"editor data:\", this.editorData);\n    if(this.editorData){\n      if(this.editorData.title){\n        this.editorContent = this.editorData.title+'\\n'+this.editorData.subTitle+'\\n'+this.editorData.content\n      }\n    }\n  }\n  contentChanges(content){\n    // console.log(\"content\", content);\n    var [title, subTitle, ...cont] = content.split('\\n');\n    let obj = {\n      \"folderId\" : this.editorData.folderId,\n      \"title\" : title,\n      \"subTitle\" : subTitle,\n      \"content\" : cont.join(''),\n      \"modifiedDateTime\" : new Date()\n    }\n    // console.log(\"obj :\", obj);\n    this.service.updateNoteService(obj, this.editorData.id).subscribe(data =>{\n      if(data){\n        this.service.getNotesService(this.editorData.folderId).subscribe(res =>{\n          if(res){\n            this.updatedNotesList.emit(res);\n          }\n        },\n        error =>{\n          const toast: Toast = {\n            type: 'error',\n            body: error,\n            showCloseButton: true\n          };\n          this.toasterService.pop(toast);\n        });\n      }\n\n    },\n    error =>{\n      const toast: Toast = {\n        type: 'error',\n        body: error,\n        showCloseButton: true\n      };\n      this.toasterService.pop(toast);\n    });\n\n  }\n\n}\n","module.exports = \"<div class=\\\"folder_cont\\\">\\n  <div class=\\\"folders\\\">\\n      <div class=\\\"folderName\\\" [ngClass]=\\\"{'active': selectedItem == folder}\\\" *ngFor= \\\"let folder of data\\\" (click)=\\\"selectedfolder($event, folder)\\\">\\n        <span>{{folder.folderName}}</span>\\n      </div>\\n    </div>\\n  \\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-folders',\n  templateUrl: './folders.component.html',\n  // styleUrls: ['./folders.component.scss']\n})\nexport class FoldersComponent implements OnInit {\n  @Input() data : any;\n  @Output() activeFolder = new EventEmitter<any>();\n  selectedItem = {};\n  sortedData : any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  ngOnChanges(){\n    if(this.data){\n      // console.log(\"folder list: \", this.data);\n      this.selectedItem = this.data[0];\n    }\n\n  }\n  selectedfolder(evt, folderDetails){\n    this.selectedItem = folderDetails;\n    this.activeFolder.emit(folderDetails);\n  }\n\n}\n","module.exports = \"<div class=\\\"notes_cont\\\" *ngIf=\\\"data\\\">\\n  <div class=\\\"notes\\\" *ngFor= \\\"let note of data.sort(sortFunc)\\\" [ngClass]=\\\"{'active': selectedItem == note}\\\" (click)=\\\"selectedNote($event, note)\\\">\\n    <p><b>{{note.title}}</b></p>\\n    <div class=\\\"subCont\\\">\\n      <span>{{note.modifiedDateTime | date: 'dd/MM/yyyy'}} </span> &nbsp;\\n      <span class=\\\"subtitle\\\">{{note.subTitle}}</span>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output , EventEmitter} from '@angular/core';\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  // styleUrls: ['./notes.component.scss']\n})\nexport class NotesComponent implements OnInit {\n  @Input() data : any;\n  @Output() activeNote = new EventEmitter<any>();\n  selectedItem = {};\n  constructor() { }\n\n  ngOnInit() {\n    // this.selectedItem = this.data[0];\n  }\n  ngOnChanges(){\n    // if(this.data){\n    //   // console.log(\"folder list: \", this.data);\n\n    //   // this.selectedItem = this.data[0];\n    // }\n  }\n  sortFunc(a, b) {\n    return new Date(b.modifiedDateTime).getTime() - new Date(a.modifiedDateTime).getTime()\n  }\n\n  selectedNote(evt, item){\n    this.selectedItem = item;\n    this.activeNote.emit(item);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http' ;\nimport { throwError} from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Toast, ToasterService, ToasterConfig } from 'angular2-toaster';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllSetupService {\n  private toasterService: ToasterService;\n  public config1: ToasterConfig = new ToasterConfig({\n    positionClass: 'toast-top-center'\n  });\n  constructor(private http : HttpClient, toasterService: ToasterService) {\n    this.toasterService = toasterService;\n  }\n  addFolderService(body){\n    return this.http.post('https://json-server-1.herokuapp.com/data/folders', body)\n    .pipe(\n      retry(0),\n      catchError(this.customError)\n    );\n  }\n  getFolderService(){\n    return this.http.get('https://json-server-1.herokuapp.com/data/folders?_sort=folderName&_order=asc')\n    .pipe(\n      retry(0),\n      catchError(this.customError)\n    );\n  }\n  getNotesService(id){\n    return this.http.get('https://json-server-1.herokuapp.com/data/notes?folderId='+id)\n    .pipe(\n      retry(0),\n      catchError(this.customError)\n    );\n  }\n  getAllNotesService(){\n    return this.http.get('https://json-server-1.herokuapp.com/data/notes')\n    .pipe(\n      retry(0),\n      catchError(this.customError)\n    );\n  }\n  addNoteService(body){\n    return this.http.post('https://json-server-1.herokuapp.com/data/notes', body)\n    .pipe(\n      retry(0),\n      catchError(this.customError)\n    );\n  }\n  updateNoteService(body , id){\n    return this.http.put('https://json-server-1.herokuapp.com/data/notes/'+id, body)\n    .pipe(\n      retry(0),\n      catchError(this.customError)\n    );\n  }\n  deleteNoteService(id){\n    return this.http.delete('https://json-server-1.herokuapp.com/data/notes/'+id)\n    .pipe(\n      retry(0),\n      catchError(this.customError)\n    );\n  }\n  customError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = 'Error Code: '+ error.status + '\\n Message: '+ error.error.detail;\n    }\n    return throwError(errorMessage);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}